/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
export namespace Components {
    interface SfCard {
        "center": boolean;
        "dist": string;
    }
    interface SfCardCol {
    }
    interface SfCardContent {
    }
    interface SfCardImage {
        "image": string;
    }
    interface SfCardTitle {
    }
    interface SfForm {
    }
    interface SfFullAddress {
        "addressSubmited": () => Promise<void>;
        "idSuffix": string;
        /**
          * Gets license to be validated.
         */
        "lic": string;
        /**
          * Data array with the Object config
         */
        "showButtom": boolean;
    }
    interface SfFullCreditCard {
        "idSuffix": string;
        /**
          * Gets license to be validated.
         */
        "lic": string;
        /**
          * Data array with the Object config
         */
        "paymentAddressConfig": string;
        "showButtom": boolean;
    }
    interface SfInput {
        "amexImg": string;
        "citiesUrl": string;
        "countriesUrl": string;
        "dinnersImg": string;
        "discoverImg": string;
        "jcbImg": string;
        /**
          * Gets license to be validated.
         */
        "lic": string;
        "mastercardImg": string;
        "sfData": string;
        "sfDisabled": boolean;
        "sfError": string;
        "sfId": string;
        "sfLabel": string;
        "sfRequired": boolean;
        "sfType": string;
        "statesUrl": string;
        "unionImg": string;
        "visaImg": string;
    }
    interface SfMainTitle {
    }
    interface SfRadioGroup {
        /**
          * Data array with the Object config
         */
        "radioGroupData": any;
    }
    interface SfSelectMenu {
        /**
          * Data array with the Object config
         */
        "selectMenuData": any;
        "selectMenuLabels": any;
    }
    interface SfStep {
    }
    interface SfStepper {
        /**
          * Gets license to be validated.
         */
        "lic": string;
        "onNextStep": (index: any) => Promise<void>;
        /**
          * Defines if stepper is 'horizontal' or 'vertical'
         */
        "stepperAlign": string;
        /**
          * Steps array with the Object config
         */
        "stepsData": string;
    }
    interface SfSubmitButton {
        "btnStyle": string;
        "idSuffix": string;
        "sfDisabled": boolean;
    }
}
declare global {
    interface HTMLSfCardElement extends Components.SfCard, HTMLStencilElement {
    }
    var HTMLSfCardElement: {
        prototype: HTMLSfCardElement;
        new (): HTMLSfCardElement;
    };
    interface HTMLSfCardColElement extends Components.SfCardCol, HTMLStencilElement {
    }
    var HTMLSfCardColElement: {
        prototype: HTMLSfCardColElement;
        new (): HTMLSfCardColElement;
    };
    interface HTMLSfCardContentElement extends Components.SfCardContent, HTMLStencilElement {
    }
    var HTMLSfCardContentElement: {
        prototype: HTMLSfCardContentElement;
        new (): HTMLSfCardContentElement;
    };
    interface HTMLSfCardImageElement extends Components.SfCardImage, HTMLStencilElement {
    }
    var HTMLSfCardImageElement: {
        prototype: HTMLSfCardImageElement;
        new (): HTMLSfCardImageElement;
    };
    interface HTMLSfCardTitleElement extends Components.SfCardTitle, HTMLStencilElement {
    }
    var HTMLSfCardTitleElement: {
        prototype: HTMLSfCardTitleElement;
        new (): HTMLSfCardTitleElement;
    };
    interface HTMLSfFormElement extends Components.SfForm, HTMLStencilElement {
    }
    var HTMLSfFormElement: {
        prototype: HTMLSfFormElement;
        new (): HTMLSfFormElement;
    };
    interface HTMLSfFullAddressElement extends Components.SfFullAddress, HTMLStencilElement {
    }
    var HTMLSfFullAddressElement: {
        prototype: HTMLSfFullAddressElement;
        new (): HTMLSfFullAddressElement;
    };
    interface HTMLSfFullCreditCardElement extends Components.SfFullCreditCard, HTMLStencilElement {
    }
    var HTMLSfFullCreditCardElement: {
        prototype: HTMLSfFullCreditCardElement;
        new (): HTMLSfFullCreditCardElement;
    };
    interface HTMLSfInputElement extends Components.SfInput, HTMLStencilElement {
    }
    var HTMLSfInputElement: {
        prototype: HTMLSfInputElement;
        new (): HTMLSfInputElement;
    };
    interface HTMLSfMainTitleElement extends Components.SfMainTitle, HTMLStencilElement {
    }
    var HTMLSfMainTitleElement: {
        prototype: HTMLSfMainTitleElement;
        new (): HTMLSfMainTitleElement;
    };
    interface HTMLSfRadioGroupElement extends Components.SfRadioGroup, HTMLStencilElement {
    }
    var HTMLSfRadioGroupElement: {
        prototype: HTMLSfRadioGroupElement;
        new (): HTMLSfRadioGroupElement;
    };
    interface HTMLSfSelectMenuElement extends Components.SfSelectMenu, HTMLStencilElement {
    }
    var HTMLSfSelectMenuElement: {
        prototype: HTMLSfSelectMenuElement;
        new (): HTMLSfSelectMenuElement;
    };
    interface HTMLSfStepElement extends Components.SfStep, HTMLStencilElement {
    }
    var HTMLSfStepElement: {
        prototype: HTMLSfStepElement;
        new (): HTMLSfStepElement;
    };
    interface HTMLSfStepperElement extends Components.SfStepper, HTMLStencilElement {
    }
    var HTMLSfStepperElement: {
        prototype: HTMLSfStepperElement;
        new (): HTMLSfStepperElement;
    };
    interface HTMLSfSubmitButtonElement extends Components.SfSubmitButton, HTMLStencilElement {
    }
    var HTMLSfSubmitButtonElement: {
        prototype: HTMLSfSubmitButtonElement;
        new (): HTMLSfSubmitButtonElement;
    };
    interface HTMLElementTagNameMap {
        "sf-card": HTMLSfCardElement;
        "sf-card-col": HTMLSfCardColElement;
        "sf-card-content": HTMLSfCardContentElement;
        "sf-card-image": HTMLSfCardImageElement;
        "sf-card-title": HTMLSfCardTitleElement;
        "sf-form": HTMLSfFormElement;
        "sf-full-address": HTMLSfFullAddressElement;
        "sf-full-credit-card": HTMLSfFullCreditCardElement;
        "sf-input": HTMLSfInputElement;
        "sf-main-title": HTMLSfMainTitleElement;
        "sf-radio-group": HTMLSfRadioGroupElement;
        "sf-select-menu": HTMLSfSelectMenuElement;
        "sf-step": HTMLSfStepElement;
        "sf-stepper": HTMLSfStepperElement;
        "sf-submit-button": HTMLSfSubmitButtonElement;
    }
}
declare namespace LocalJSX {
    interface SfCard {
        "center"?: boolean;
        "dist"?: string;
    }
    interface SfCardCol {
    }
    interface SfCardContent {
    }
    interface SfCardImage {
        "image"?: string;
    }
    interface SfCardTitle {
    }
    interface SfForm {
    }
    interface SfFullAddress {
        "idSuffix"?: string;
        /**
          * Gets license to be validated.
         */
        "lic"?: string;
        "onAddressSubmitted"?: (event: CustomEvent<boolean>) => void;
        "onBackBtnPressed"?: (event: CustomEvent<boolean>) => void;
        /**
          * Data array with the Object config
         */
        "showButtom"?: boolean;
    }
    interface SfFullCreditCard {
        "idSuffix"?: string;
        /**
          * Gets license to be validated.
         */
        "lic"?: string;
        "onBackBtnPressed"?: (event: CustomEvent<boolean>) => void;
        "onCcSubmitted"?: (event: CustomEvent<boolean>) => void;
        /**
          * Data array with the Object config
         */
        "paymentAddressConfig"?: string;
        "showButtom"?: boolean;
    }
    interface SfInput {
        "amexImg"?: string;
        "citiesUrl"?: string;
        "countriesUrl"?: string;
        "dinnersImg"?: string;
        "discoverImg"?: string;
        "jcbImg"?: string;
        /**
          * Gets license to be validated.
         */
        "lic"?: string;
        "mastercardImg"?: string;
        "onInputValidated"?: (event: CustomEvent<boolean>) => void;
        "sfData"?: string;
        "sfDisabled"?: boolean;
        "sfError"?: string;
        "sfId"?: string;
        "sfLabel"?: string;
        "sfRequired"?: boolean;
        "sfType"?: string;
        "statesUrl"?: string;
        "unionImg"?: string;
        "visaImg"?: string;
    }
    interface SfMainTitle {
    }
    interface SfRadioGroup {
        "onRadioValueSelected"?: (event: CustomEvent<string>) => void;
        /**
          * Data array with the Object config
         */
        "radioGroupData"?: any;
    }
    interface SfSelectMenu {
        "onSelectMenuValue"?: (event: CustomEvent<string>) => void;
        /**
          * Data array with the Object config
         */
        "selectMenuData"?: any;
        "selectMenuLabels"?: any;
    }
    interface SfStep {
    }
    interface SfStepper {
        /**
          * Gets license to be validated.
         */
        "lic"?: string;
        "onLicenseChecked"?: (event: CustomEvent<boolean>) => void;
        "onUpdateStep"?: (event: CustomEvent<string>) => void;
        /**
          * Defines if stepper is 'horizontal' or 'vertical'
         */
        "stepperAlign"?: string;
        /**
          * Steps array with the Object config
         */
        "stepsData"?: string;
    }
    interface SfSubmitButton {
        "btnStyle"?: string;
        "idSuffix"?: string;
        "sfDisabled"?: boolean;
    }
    interface IntrinsicElements {
        "sf-card": SfCard;
        "sf-card-col": SfCardCol;
        "sf-card-content": SfCardContent;
        "sf-card-image": SfCardImage;
        "sf-card-title": SfCardTitle;
        "sf-form": SfForm;
        "sf-full-address": SfFullAddress;
        "sf-full-credit-card": SfFullCreditCard;
        "sf-input": SfInput;
        "sf-main-title": SfMainTitle;
        "sf-radio-group": SfRadioGroup;
        "sf-select-menu": SfSelectMenu;
        "sf-step": SfStep;
        "sf-stepper": SfStepper;
        "sf-submit-button": SfSubmitButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "sf-card": LocalJSX.SfCard & JSXBase.HTMLAttributes<HTMLSfCardElement>;
            "sf-card-col": LocalJSX.SfCardCol & JSXBase.HTMLAttributes<HTMLSfCardColElement>;
            "sf-card-content": LocalJSX.SfCardContent & JSXBase.HTMLAttributes<HTMLSfCardContentElement>;
            "sf-card-image": LocalJSX.SfCardImage & JSXBase.HTMLAttributes<HTMLSfCardImageElement>;
            "sf-card-title": LocalJSX.SfCardTitle & JSXBase.HTMLAttributes<HTMLSfCardTitleElement>;
            "sf-form": LocalJSX.SfForm & JSXBase.HTMLAttributes<HTMLSfFormElement>;
            "sf-full-address": LocalJSX.SfFullAddress & JSXBase.HTMLAttributes<HTMLSfFullAddressElement>;
            "sf-full-credit-card": LocalJSX.SfFullCreditCard & JSXBase.HTMLAttributes<HTMLSfFullCreditCardElement>;
            "sf-input": LocalJSX.SfInput & JSXBase.HTMLAttributes<HTMLSfInputElement>;
            "sf-main-title": LocalJSX.SfMainTitle & JSXBase.HTMLAttributes<HTMLSfMainTitleElement>;
            "sf-radio-group": LocalJSX.SfRadioGroup & JSXBase.HTMLAttributes<HTMLSfRadioGroupElement>;
            "sf-select-menu": LocalJSX.SfSelectMenu & JSXBase.HTMLAttributes<HTMLSfSelectMenuElement>;
            "sf-step": LocalJSX.SfStep & JSXBase.HTMLAttributes<HTMLSfStepElement>;
            "sf-stepper": LocalJSX.SfStepper & JSXBase.HTMLAttributes<HTMLSfStepperElement>;
            "sf-submit-button": LocalJSX.SfSubmitButton & JSXBase.HTMLAttributes<HTMLSfSubmitButtonElement>;
        }
    }
}
